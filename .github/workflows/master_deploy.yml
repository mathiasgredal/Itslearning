name: master_deploy

on:
  push:
    branches: [ master ]

jobs:
  master_deploy:
    runs-on: macos-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Find first scheme of default project
        run: |
          echo "::set-env name=SCHEME::$(xcodebuild -list -json | jq -r '.project.schemes[0]')"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      - name: Set environment variables from project settings
        run: |
          function set-env-from-proj { 
            echo "::set-env name=$1::$(xcodebuild -scheme "$SCHEME" -showBuildSettings | grep " $1 " | sed "s/[ ]*$1 = //")"
          }
          set-env-from-proj FULL_PRODUCT_NAME
          set-env-from-proj INSTALL_PATH
          set-env-from-proj PRODUCT_BUNDLE_IDENTIFIER
          set-env-from-proj PRODUCT_MODULE_NAME
          set-env-from-proj PRODUCT_NAME
          set-env-from-proj PROJECT_NAME
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      - name: Import signing certificate into keychain
        run: |
          KEYCHAIN_FILE=default.keychain
          KEYCHAIN_PASSWORD=myvoiceismypassport
          security create-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_FILE
          security default-keychain -s $KEYCHAIN_FILE
          security unlock-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_FILE
          security import <(echo $SIGNING_CERTIFICATE_P12_DATA | base64 --decode) \
                          -f pkcs12 \
                          -k $KEYCHAIN_FILE \
                          -P $SIGNING_CERTIFICATE_PASSWORD \
                          -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k $KEYCHAIN_PASSWORD $KEYCHAIN_FILE
        env:
          SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.SIGNING_CERTIFICATE_P12_DATA }}
          SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      - name: Build and install app
        shell: bash --noprofile --norc -eo pipefail {0}
        run: |
          xcodebuild -scheme "$SCHEME" -allowProvisioningUpdates install DSTROOT=build/root
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      - name: Package app
        run: |
          hdiutil create \
                  -fs HFS+ \
                  -srcfolder "build/root/$INSTALL_PATH/$FULL_PRODUCT_NAME" \
                  -volname "$PRODUCT_NAME" "build/$PRODUCT_MODULE_NAME.dmg"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      - name: Notarize app
        run: |
          npx notarize-cli --file "build/$PRODUCT_MODULE_NAME.dmg"
        env:
          NOTARIZE_USERNAME: ${{ secrets.NOTARIZE_USERNAME }}
          NOTARIZE_PASSWORD: ${{ secrets.NOTARIZE_PASSWORD }}
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

      - name: Release app
        uses: softprops/action-gh-release@v1
        with:
          files: build/${{ env.PRODUCT_MODULE_NAME }}.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'